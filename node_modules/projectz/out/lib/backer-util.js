// Generated by CoffeeScript 1.8.0
(function() {
  var backerUtil, badgeUtil, projectzUtil;

  projectzUtil = require('./projectz-util');

  badgeUtil = require('./badge-util');

  module.exports = backerUtil = {
    getSponsorsText: function(opts) {
      var result, sponsor;
      result = '';
      if (opts.sponsors.length === 0) {
        result += "No sponsors yet! Will you be the first?\n\n";
        result += badgeUtil.getTypedBadges('donation', opts);
      } else {
        result += "These amazing people have contributed finances to this project:\n\n";
        result += '- ' + ((function() {
          var _i, _len, _ref, _results;
          _ref = opts.sponsors;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            sponsor = _ref[_i];
            _results.push(projectzUtil.getPersonText(sponsor));
          }
          return _results;
        })()).join('\n- ');
        result += "\n\nBecome a sponsor!\n\n" + (badgeUtil.getTypedBadges('donation', opts));
      }
      return result;
    },
    getMaintainersText: function(opts) {
      var maintainer, result;
      result = '';
      if (opts.maintainers.length === 0) {
        result += "No maintainers yet! Will you be the first?";
      } else {
        result += "These amazing people are maintaining this project:\n\n";
        result += '- ' + ((function() {
          var _i, _len, _ref, _results;
          _ref = opts.maintainers;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            maintainer = _ref[_i];
            _results.push(projectzUtil.getPersonText(maintainer));
          }
          return _results;
        })()).join('\n- ');
      }
      return result;
    },
    getContributorsText: function(opts) {
      var contributor, result;
      result = '';
      if (opts.contributors.length === 0) {
        result += "No contributors yet! Will you be the first?";
        result += "\n" + (backerUtil.getContributeText(opts));
      } else {
        result += "These amazing people have contributed code to this project:\n\n";
        result += '- ' + ((function() {
          var _i, _len, _ref, _results;
          _ref = opts.contributors;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            contributor = _ref[_i];
            _results.push(projectzUtil.getPersonText(contributor) + (" â€” [view contributions](https://github.com/" + opts.repo + "/commits?author=" + contributor.username + ")"));
          }
          return _results;
        })()).join('\n- ');
        result += "\n\n" + (backerUtil.getContributeText(opts, 'Become a contributor!'));
      }
      return result;
    },
    getContributeText: function(opts, text) {
      var file, url;
      file = 'CONTRIBUTING.md';
      url = projectzUtil.getFileUrl(opts, file);
      if (text == null) {
        text = "Discover how you can contribute by heading on over to the `" + file + "` file.";
      }
      return "[" + text + "](" + url + ")";
    },
    getBackerSection: function(opts) {
      var result;
      if (opts == null) {
        opts = {};
      }
      if (!opts.licenses) {
        return '';
      }
      result = "## Backers\n\n### Maintainers\n\n" + (backerUtil.getMaintainersText(opts)) + "\n\n### Sponsors\n\n" + (backerUtil.getSponsorsText(opts)) + "\n\n### Contributors\n\n" + (backerUtil.getContributorsText(opts));
      return result;
    },
    getBackerFile: function(opts) {
      var result;
      if (opts == null) {
        opts = {};
      }
      if (!opts.licenses) {
        return '';
      }
      result = "# Backers\n\n## Maintainers\n\n" + (backerUtil.getMaintainersText(opts)) + "\n\n## Sponsors\n\n" + (backerUtil.getSponsorsText(opts)) + "\n\n## Contributors\n\n" + (backerUtil.getContributorsText(opts));
      return result;
    },
    getContributeSection: function(opts) {
      var result;
      result = "## Contribute\n\n" + (backerUtil.getContributeText(opts));
      return result;
    }
  };

}).call(this);
