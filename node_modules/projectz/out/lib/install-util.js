// Generated by CoffeeScript 1.9.1
(function() {
  var installUtil;

  module.exports = installUtil = {
    getInstallInstructions: function(opts) {
      var commands, pluginName, result;
      result = "## Install";
      if (opts.name.indexOf('docpad-plugin-') === 0) {
        pluginName = opts.name.substring(14);
        result += "\n\n``` bash\ndocpad install " + pluginName + "\n```";
      } else {
        if (opts.packages["package"]) {
          if (opts.preferGlobal) {
            commands = '`' + Object.keys(opts.bin || {}).join('` ') + '`';
            result += "\n\n### [NPM](http://npmjs.org/)\n- Use: " + commands + "\n- Install: `npm install --global " + opts.name + "`";
          } else {
            result += "\n\n### [NPM](http://npmjs.org/)\n- Use: `require('" + opts.name + "')`\n- Install: `npm install --save " + opts.name + "`";
          }
          if (opts.browsers) {
            result += "\n\n### [Browserify](http://browserify.org/)\n- Use: `require('" + opts.name + "')`\n- Install: `npm install --save " + opts.name + "`\n- CDN URL: `//wzrd.in/bundle/" + opts.name + "@" + opts.version + "`\n\n### [Ender](http://enderjs.com)\n- Use: `require('" + opts.name + "')`\n- Install: `ender add " + opts.name + "`";
          }
        }
        if (opts.packages.component) {
          result += "\n\n### [Component](http://github.com/component/component)\n- Use: `require('" + opts.name + "')`\n- Install: `component install " + opts.repo + "`";
        }
        if (opts.packages.bower) {
          result += "\n\n### [Bower](http://bower.io/)\n- Use: `require('" + opts.name + "')`\n- Install: `bower install " + opts.name + "`";
        }
      }
      return result;
    }
  };

}).call(this);
