// Generated by CoffeeScript 1.8.0
(function() {
  var projectzUtil, typeChecker,
    __hasProp = {}.hasOwnProperty;

  typeChecker = require('typechecker');

  module.exports = projectzUtil = {
    getPersonText: function(person) {
      return person.markdown || person.text || person;
    },
    getFileUrl: function(opts, filename) {
      var url;
      url = "https://github.com/" + opts.username + "/" + opts.name + "/blob/master/" + filename + "#files";
      return url;
    },
    getFunctionNamed: function(str) {
      var fn, name;
      str = str.toLowerCase();
      for (name in this) {
        if (!__hasProp.call(this, name)) continue;
        fn = this[name];
        if (name.substr(3).substr(str.length * -1).toLowerCase() === str) {
          return fn;
        }
      }
      return null;
    },
    getFunctionsEndingWith: function(str) {
      var fn, fns, name;
      fns = [];
      for (name in this) {
        if (!__hasProp.call(this, name)) continue;
        fn = this[name];
        if (name.substr(str.length * -1) === str) {
          fns.push(fn);
        }
      }
      return fns;
    },
    replaceSection: function(names, source, inject) {
      var regex, regexName, replace, result, sectionName;
      if (typeChecker.isArray(names)) {
        regexName = '(' + names.join('|') + ')';
        sectionName = names[0];
      } else {
        regexName = sectionName = names;
      }
      sectionName = sectionName.toUpperCase();
      regex = RegExp("\\n(<!--\\s*" + regexName + "\\s*-->|<!--\\s*" + regexName + "/\\s*-->[\\s\\S]*?<!--\\s*/" + regexName + "\\s*-->)\\s*", "gim");
      replace = "\n<!-- " + sectionName + "/ -->\n\n" + inject + "\n\n<!-- /" + sectionName + " -->\n\n\n";
      result = source.replace(regex, replace);
      return result;
    }
  };

}).call(this);
