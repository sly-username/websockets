/***
 * Keyframes mixin
 * .keyframes( @name:string, @rules:{ keyframe block } );
 *
 * Description:
 * This will build a set of keyframe definitions with the given
 * prefixes.
 *
 * Example:
 ```less
  .keyframes("my-fade-animation", {
    from {
      opacity: 0;
    }
    50% {
      opacity: 0.3;
    }
    to{
      opacity: 1;
    }
  });
 ```
***/
.keyframes( @name, @rules ) {
  @-webkit-keyframes @name {
    @rules();
  }
  @keyframes @name {
    @rules();
  }
}

/***
 * Animation property mixin
 * .animation();
 *
 * Example:
 *   .animation( my-fade-animation 3s, my-other-animation 2s 2s ; );
 *
 * Description:
 * .animation mixin is shorthand for -webkit-animation and animation and use for css animations
 * should be used like a native css animation property
 *
 * This mixin will take in the following parameters with its respective values in order
 * @animation: <single-animation-name> || <time> || <timing-function> || <time> ||
               <single-animation-iteration-count> || <single-animation-direction> ||
               <single-animation-fill-mode> || <single-animation-play-state>
***/
.animation( @animation ) {
  -webkit-animation+: @animation;
  animation+: @animation;
}

/***
 * Example
 * .animation( my-fade-animation; 3s; @delay: 2s );
 *
 * Description:
 * This is an extended mixin for advance animation and -webkit-animation.
 * This mixin requires a name and duration, but for every additional parameter
 * there needs to be an @parameterName: value. The following is a list of usable parameters
 * for this mixin are as follows:
 *
 * @name: a name of your custom animation
 * @duration: <time> (Default is 0)
 * @timingFn: linear || ease || ease-in || ease-out || ease-in-out || cubic-bezier(n,n,n,n)
 * @delay: <time> (Default is 0)
 * @iterationCount: <number> (Default is 1) || infinite
 * @direction: normal || reverse || alternate || alternate-reverse
 * @fillMode: none || forwards || backwards || both
 * @playState: paused || running
 ***/
.animation( @name; @duration; @timingFn: ease; @delay: 0s; @iterationCount: 1; @direction: normal; @fillMode: none; @playState: running ) {
  -webkit-animation+: @name @duration @timingFn @delay @iterationCount @direction @fillMode @playState;
          animation+: @name @duration @timingFn @delay @iterationCount @direction @fillMode @playState;
}
