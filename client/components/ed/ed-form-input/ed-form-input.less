@import "../../../styles/mixins/prefixes/placeholder.less";
@import "../../../styles/fonts/edTypeStyles.less";
@import "../../../styles/ed/colors.vars.less";
@import "../../../styles/ed/alignments.mixin.less";
@import "../../../styles/mixins/all-prefixes.less";


.form-input-container {
  height: 7.5rem;
  width: 98%;
  max-width: 59.6rem;
  background-color: @darkPurple3;
  margin: -.33rem auto;
  box-shadow: .4rem .4rem 0 0 fade(@darkPurple3, 75%) inset;
}
input {
  .edType( heading-L );
  .verticalAlign();
  color: @originalWhite;
  float: left;
  background: transparent;
  border: 0;
  outline: 0;
  .input-placeholder( { color: @originalGrey } );
}

ed-icon {
/* for svg height and width dimensions may both need to be declared and they work like regular CSS max-width or max-height
*/
  width: 3rem;
  height: 50%;
  fill: @originalGrey;
  pointer-events: none;
  float: left;
  padding: 0 2rem;
  .verticalAlign();
}

:host([type="date"]){
  .form-input-container {
    .arrow-box {
      .transform( translateY(7%) translateX(-7%) );
      float: right;
      height: 6.5rem;
      width: 6.5rem;
      background-color: @darkPurple2;
      pointer-events: none;
    }
  }
}
